name: SPI ROSE Command Line Tool
version: "0.1.0"
about: "Yet Another CLI for SPI matching the SpiROSE SPI behaviour"
args:
   - device:
      help: "SPI device to use. To test, use none as device. If no subcommand is given, it will only check that the device can be opened and configured."
      short: d
      long: device
      takes_value: true
      default_value: "/dev/spidev0.0"
   - verbose:
      help: "Trace data sent and received"
      short: v
      long: verbose
   - frequency:
      help: "SPI speed in bit/s"
      short: f
      long: frequency
      takes_value: true
      default_value: "200k"
subcommands:
   - enable_rgb:
      about: "Start display"
   - disable_rgb:
      about: "Stop display"
   - get_rotation:
      about: "Read rotation slice index"
   - get_speed:
      about: "Read speed as 66000nth of a second per turn"
   - get_config:
      about: "Get configuration"
   - get_debug:
      about: "Get the 4 bytes FPGA debug module"
   - send_config:
      about: "Configure the LED drivers"
      args:
         - config_file:
            help: "LED Drivers configuration file, TOML format"
            required: true
   - enable_mux:
      about: "Enable one or several led multiplexers"
      args:
         - mux_id:
            value_name: mux_id
            multiple: true
            required: true
            possible_values: ["0", "1", "2", "3", "4", "5", "6", "7"]
   - disable_mux:
      about: "Disable one or several led multiplexers"
      args:
         - mux_id:
            value_name: mux_id
            multiple: true
            required: true
            possible_values: ["0", "1", "2", "3", "4", "5", "6", "7"]
   - send_driver_rgb:
      about: "Send raw RGB data to drivers"
      args:
         - filename:
            help: "The filename to read and send"
            required: true
   - send_driver_pokered:
      about: "Send pokered RGB data to drivers"
      args:
         - filename:
            help: "The filename to read and send"
            required: true
   - manage:
      about: "Tell the FPGA to send debugging signals from the SPI to the other module, for example to send data to a driver"
   - release:
      about: "Do the opposite of manage, tell the FPGA that it shouldn't use SPI's debugging signals as input for the other modules"
   - reset:
      about: "Reset the FPGA"
   - read_pixel:
      about: "Read a pixel"
      args:
        - x:
           help: "The column"
           required: true
        - y:
           help: "The line"
           required: true
   - write_pixel:
      about: "Write a pixel"
      args:
        - x:
           help: "The column"
           required: true
        - y:
           help: "The line"
           required: true
        - r:
           help: "Red component"
           required: true
        - g:
           help: "Green component"
           required: true
        - b:
           help: "Blue component"
           required: true
   - color:
      about: "Set a uniform color on all pixels"
      args:
        - r:
           help: "Red component"
           required: true
        - g:
           help: "Green component"
           required: true
        - b:
           help: "Blue component"
           required: true
   - send_image:
      about: "Send a 40x48 image to the display" 
      args:
         - filename:
            help: "The image to read and send"
            required: true
   - get_image:
      about: "Receive a 40x48 image from the display"
      args:
         - filename:
            help: "The PNG file to write"
            required: true
